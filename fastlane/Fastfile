# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.29.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "Twignature") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Twignature") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  #desc “Submit a new Crashlytics Beta and send a notification to Slack.”
 lane :beta_crash do
   increment_build_number
   changelog = prompt(text: "Enter the change log: ",
      multi_line_end_keyword: "END")
    gym(
    export_method: "ad-hoc",
  )
   crashlytics(
   api_token: ‘0c7675012470bd5f6ee23c7d90806bb92d1c4bd8’,
   build_secret: ‘686b2add38b10b5a368b07ef2a35272eb1ad3f6d7e91eb0946b5fc7732fa3917’,
   notes: changelog,
   groups: ["Applikey"]
   )
   # slack(
   # message: “Beta App successfully released!”
   # )
 end

 lane :provision_update do
  # produce(
  #   app_name: 'Twignature',
  #   language: 'English',
  #   company_name: 'Coreline'
  #   )

  cert(development: true,
  output_path: 'Certificates')

  sigh(force: true,
  development: true,
  output_path: 'Provisions')

  cert(output_path: 'Certificates')

  sigh(force: true,
  adhoc: true,
  output_path: 'Provisions')

  sigh(force: true,
  output_path: 'Provisions')
 end

 lane :provision_check do
  # produce(
  #   app_name: 'Twignature',
  #   language: 'English',
  #   company_name: 'Coreline'
  #   )

  cert(development: true,
  output_path: 'Certificates')

  sigh(force: false,
  development: true,
  output_path: 'Provisions')

  cert(output_path: 'Certificates')

  sigh(force: false,
  adhoc: true,
  output_path: 'Provisions')

  sigh(force: false,
  output_path: 'Provisions')
 end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
